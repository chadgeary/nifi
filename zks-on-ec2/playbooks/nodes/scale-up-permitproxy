#!/bin/bash
# Adds proxy request permission to node from cluster
export JAVA_HOME=/usr/lib/jvm/default-java

# Responses
CLUSTERJSON=$(mktemp)

# Retries
MAX_ATTEMPTS=30
SLEEP_INTERVAL=5
TARGET_STATE="COMPLETE"

# List nodes
LIST_ATTEMPTS=1
LIST_STATE="INCOMPLETE"
while [[ $LIST_ATTEMPTS -le $MAX_ATTEMPTS && $LIST_STATE != $TARGET_STATE ]]
do
  # List nodes in json
  /opt/nifi-toolkit/bin/cli.sh nifi list-users -p /opt/nifi-certificates/admin/cli.properties -ot json > $CLUSTERJSON
  cat $CLUSTERJSON | grep --quiet $(hostname)
  if [ $? -eq 0 ]
  then
    echo "LIST_STATE=COMPLETE"
    LIST_STATE="COMPLETE"
  else
    LIST_ATTEMPTS=$(($LIST_ATTEMPTS+1))
    sleep $SLEEP_INTERVAL
  fi
done

# NODEID from HOSTNAME using jq
NODEID_ATTEMPTS=1
NODEID_STATE="INCOMPLETE"
while [[ $NODEID_ATTEMPTS -le $MAX_ATTEMPTS && $NODEID_STATE != $TARGET_STATE ]]
do
  NODEID=$(jq -r '.users[].component | select(.identity | contains("'$(hostname)'")).id' $CLUSTERJSON)
  echo $NODEID | grep --quiet '.*-.*-.*-.*-.*'
  if [ $? -eq 0 ]
  then
    echo "NODEID_STATE=COMPLETE"
    NODEID_STATE="COMPLETE"
  else
    NODEID_ATTEMPTS=$(($NODEID_ATTEMPTS+1))
    sleep $SLEEP_INTERVAL
  fi
done

# Policy ID
POLICYUP_ATTEMPTS=1
POLICYUP_STATE="INCOMPLETE"
while [[ $POLICYUP_ATTEMPTS -le $MAX_ATTEMPTS && $POLICYUP_STATE != $TARGET_STATE ]]
do
  POLICYID=$(curl --silent 'https://{{ lb_dns }}:{{ web_port }}/nifi-api/policies/write/proxy' --insecure --key /opt/nifi-certificates/admin/private_key.key --cert /opt/nifi-certificates/admin/admin_cert.pem --pass $(cat /opt/nifi-conf/nifi_secret) | jq -r '.component.id')
  # Use current policy to build new policy with NODEID
  curl --fail --silent 'https://{{ lb_dns }}:{{ web_port }}/nifi-api/policies/write/proxy' --insecure --key /opt/nifi-certificates/admin/private_key.key --cert /opt/nifi-certificates/admin/admin_cert.pem --pass $(cat /opt/nifi-conf/nifi_secret) | \
jq '.component.users += [{"revision": { "version": 0 }, "id": "'$NODEID'","permissions": {"canRead": true,"canWrite": true},"component": {"id": "'$NODEID'", "identity": "CN='$(hostname -f)', OU=NIFI","configurable": true} }]' | \
curl --fail -X PUT 'https://{{ lb_dns }}:{{ web_port }}/nifi-api/policies/'$POLICYID'' --insecure --key /opt/nifi-certificates/admin/private_key.key --cert /opt/nifi-certificates/admin/admin_cert.pem --pass $(cat /opt/nifi-conf/nifi_secret) -H 'Content-Type: application/json' --data @-
  if [ $? -eq 0 ]
  then
    POLICYUP_STATE="COMPLETE"
  else
    POLICYUP_ATTEMPTS=$((POLICYUP_ATTEMPTS+1))
    sleep $SLEEP_INTERVAL
  fi
done

# Cleanup
rm -f $CLUSTERJSON $USERRESPONSE
